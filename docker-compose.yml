version: '3.8'

# red personalizada para aislar servicios
networks:
  app_network:

services:
  # base de datos postgresql
  database:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: legacy_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    # montar scripts sql de inicializacion
    volumes:
      - ./initdb:/docker-entrypoint-initdb.d
    networks:
      - app_network
    # se verifica que postgres este listo
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      retries: 3

  # aplicacion legacy monolitica
  legacy-app:
    build: ./src/legacy-app
    ports:
      - "5000:5000"
    environment:
      DB_HOST: database
      DB_NAME: legacy_db
      DB_USER: postgres
      DB_PASSWORD: password
    networks:
      - app_network
    # espera que database este healthy
    depends_on:
      database:
        condition: service_healthy

  # microservicio nuevo
  new-microservice:
    build: ./src/microservice
    ports:
      - "8000:8000"
    environment:
      LEGACY_API_URL: http://legacy-app:5000
    networks:
      - app_network
    # espera que legacy-app este healthy
    depends_on:
      legacy-app:
        condition: service_healthy
